{"version":3,"sources":["webpack://@aelea/website/./src/pages/examples/ethSwap/$elements.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/api/provider.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/api/utils.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/api/account.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/components/$Transaction.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/components/$ConnectAccount.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/api/ethers-contracts/factories/EthExrd__factory.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/api/ethers-contracts/factories/EthSushi__factory.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/api/address/symbol.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/api/address/token.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/api/address/contract.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/api/contract.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/state.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/components/$tokenList.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/components/$TokenInput.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/components/$CreateTransaction.ts","webpack://@aelea/website/../ui-components/.dist/esm/components/form/$Slider.js","webpack://@aelea/website/./src/pages/examples/ethSwap/$MetamaskSend.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/components/$Confirmation.ts","webpack://@aelea/website/./src/pages/examples/ethSwap/api/transaction.ts"],"names":["$cryptoIcon","$content","size","viewBox","$icon","fill","width","svgOps","style","minWidth","$g","$path","$caretDown","d","$caretDblDown","$circle","$xrd","$usdt","$eth","$sushi","$spinner","margin","borderRadius","border","boxShadow","backgroundColor","animation","$gaugeMetric","value","styleCSS","animateChange","attrAniamtion","n","strokeDasharray","stroke","display","height","strokeWidth","$tokenLabel","token","$label","layoutSheet","cursor","alignItems","fontWeight","symbol","fontSize","color","label","whiteSpace","textOverflow","overflow","$labeledDivider","placeContent","flex","borderBottom","CHAIN","EXPLORER_URL","ETH","ETH_KOVAN","ETH_ROPSTEN","BSC","BSC_TESTNET","provider","async","metamask","Error","w3p","err","console","error","at","noProviderAlert","providerAction","interval","actionOp","tx","O","zXAdressRegxp","validFractionalNumberRegxp","zeros","length","isAddress","address","test","getMultiplier","decimals","substring","bnToHex","hex","toString","formatFixed","multiplier","multiplierBn","BigInt","parsedValue","negative","fraction","matchFractions","match","parseFixed","multiplierLength","comps","split","whole","wholeValue","fractionValue","wei","eventName","action","eventChange","args","fromCallback","cb","on","removeListener","ev","networkChange","_chainId","window","location","reload","getNetwork","chainId","initialNetwork","p","network","initialAccountList","listAccounts","accountListChange","_accountHash","accountList","account","requestAccounts","request","method","$status","fontStyle","padding","$success","$pending","$failed","$accountAlert","title","$description","marginBottom","$installMetamaskWarning","href","$AccountConnectivity","component","requestWallet","requestWalletTeter","$connectButton","$Button","click","errorOrProvider","chain","undefined","slice","addres","cnt","parseInt","el","$jazzicon","_abi","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","EthExrd__factory","signerOrProvider","abi","EthSushi__factory","SYMBOL","ETH_CONTRACT","EXRD","SUSHI","USDC","USDT","formatBN","bnb","toBigInt","skipRepeatedBns","bn1","bn2","eq","mainchainBalance","accountHash","getBalance","mainchainBalanceReadable","baseActions","contractFactory","contract","signer","getSigner","accountAndContract","state","balanceSource","balanceOf","balance","balanceReadable","listen","off","ethContracts","MAINCHAIN","to","amount","w3","params","from","connect","cont","transfer","this","tokenList","$TokenInput","changeInput","change","changeTether","switchTokenPopover","switchTokenPopoverTether","switchToken","switchTokenTether","$tokenList","list","choose","chooseTether","scrollRequest","scrollRequestTether","filterListInput","filterListInputTether","filterWithInitial","$TextField","filter","$VirtualScroll","containerOps","dataSource","$items","obj","text","Object","values","find","toLocaleLowerCase","indexOf","objectValuesContainsText","map","changeTokenBehavior","pageSize","selectedBalance","$Popover","$$popContent","dismiss","t","$Field","fieldStyle","borderBottomColor","inputOp","placeholder","$CreateTransaction","inputValueChange","inputValueChangeTether","clickOnDivide","clickOnDivideTether","divideBySlider","divideBySliderTether","switchTokenSource","switchTokenSourceTether","destination","destinationTether","send","sendTether","clipboardInput","clipboardInputTether","initialTokenValue","divideBalanceReadableBySlider","divide","divWithBigInt","Math","round","valueReadable","divideByInput","inputValue","Number","transaction","x","sendTransaction","sliceAmount","$allocateDivisionPopover","step","sliderThunmbStyle","appearance","transition","outline","background","evt","target","min","max","node","val","element","String","$Slider","focusEvent","navigator","clipboard","readText","catch","clipBoard","textAlign","disabled","s","$EtherSwapExample","backToMainClick","backToMainClickClick","txHash","sampleTxHash","accountTether","initialSwapCard","swapState","confirm","confirmTether","back","backTether","paddingTop","close","sampleTether","txDetails","getTransactionReceipt","getTxDetails","confirmations","details","status","isInteger","$NumberTicker","incrementColor","decrementColor","value$","padRight","padLeft","shortenAddress","$Transaction","hash"],"mappings":"6RAOA,MAAMA,EAAc,CAACC,EAAiBC,EAAO,OAAQC,EAAU,eAAgB,EAAAC,EAAA,GAAM,CACnFH,WACAI,KAAM,aACNC,MAAOJ,EACPC,UACAI,QAAQ,EAAAC,EAAA,IAAM,CACZC,SAAU,WAIRC,GAAK,QAAK,KAEHC,GAAQ,QAAK,QAGbC,EAAaD,GAAM,OAAK,CAAEE,EAAG,+eAAhBF,GACbG,EAAgBH,GAAM,OAAK,CAAEE,EAAG,0eAAhBF,GAGhBI,EAAUJ,GAAM,OAAK,CAAEE,EAAG,mFAG1BG,EAAOhB,EAClBW,GAAM,OAAK,CAAEE,EAAG,kRAAhBF,IAEWM,EAAQjB,EACnBW,GAAM,OAAK,CAAEE,EAAG,+gCAAhBF,IAEWO,EAAOlB,EAClBU,EACEC,GAAM,OAAK,CAAEE,EAAG,6LAAhBF,GACAA,GAAM,OAAK,CAAE,eAAgB,OAAQE,EAAG,yDAAxCF,GACAA,GAAM,OAAK,CAAE,eAAgB,OAAQE,EAAG,4CAAxCF,GACAA,GAAM,OAAK,CAAE,eAAgB,OAAQE,EAAG,iCAAxCF,KAKSQ,EAASnB,EACpBW,GAAM,OAAK,CAAE,YAAa,UAAWE,EAAG,wsDAAxCF,IAGWS,GAAW,SAAM,EAAAZ,EAAA,IAAM,CAClCa,OAAQ,SACRC,aAAc,MACdC,OAAQ,OAAO,sBACfC,UAAW,yBAAyB,eACpCC,gBAAiB,cACjBC,UAAW,gCASAC,EAAe,EAAGC,QAAO1B,OAAO,OAAQ2B,eAEnD,MAAMC,GAAgB,QAAO,IAAkB,EAAGF,GAC5CG,GAAgB,EAAAvB,EAAA,KAAY,SAAIwB,IAAK,CACzCC,gBAAwB,IAAJD,EAAH,QACjBE,OAAQF,EAAI,EAAI,cAAmB,MACjCF,IAEJ,OAAO,QAAK,MAAL,EAAY,EAAAtB,EAAA,IAAM,CAAE2B,QAAS,QAAS7B,MAAOJ,EAAMkC,OAAQlC,KAAS2B,KAAa,OAAK,CAAE1B,QAAS,cAAjG,CACLY,GAAQ,EAAAP,EAAA,IAAM,CAAEH,KAAM,OAAQ6B,OAAQ,kBAAsBG,YAAa,QAAzEtB,GACAA,GAAQ,EAAAP,EAAA,IAAM,CAAEH,KAAM,OAAQ6B,OAAQ,gBAAoBG,YAAa,QAAUN,EAAjFhB,KAKSuB,EAAc,CAACC,EAAcC,KACjC,QAAKC,EAAA,WAAqB,EAAAjC,EAAA,IAAM,CAAEkC,OAAQ,UAAWC,WAAY,WAAjE,CACLJ,EAAMnC,OACN,QAAQqC,EAAA,OAAR,EACE,SAAM,EAAAjC,EAAA,IAAM,CAAEoC,WAAY,SAA1B,CAAqCL,EAAMM,SAC3C,SAAM,EAAArC,EAAA,IAAM,CAAEsC,SAAU,MAAOC,MAAO,kBAAtC,CAA6DR,EAAMS,SAErE,EAAAxC,EAAA,IAAM,CAAEyC,WAAY,SAAUC,aAAc,WAAYC,SAAU,UAAYX,IAAU,YAI/EY,EAAmBJ,IACvB,QAAKP,EAAA,WAAqB,EAAAjC,EAAA,IAAM,CAAE6C,aAAc,SAAUV,WAAY,WAAtE,EACL,SAAQ,EAAAnC,EAAA,IAAM,CAAE8C,KAAM,EAAGC,aAAc,aAAa,sBAApD,IACA,QAAKd,EAAA,gBAA0B,EAAAjC,EAAA,IAAM,CAAEuC,MAAO,gBAAoBJ,WAAY,WAA9E,EACE,SAAM,EAAAnC,EAAA,IAAM,CAAEsC,SAAU,QAAxB,CAAkCE,IAClC,EAAA5C,EAAA,GAAM,CAAEH,SAAUa,EAAeR,MAAO,OAAQH,QAAS,YAAaE,KAAM,oBAE9E,SAAQ,EAAAG,EAAA,IAAM,CAAE8C,KAAM,EAAGC,aAAc,aAAa,sBAApD,I,ICzFQC,E,gFAAZ,SAAYA,GACV,iBACA,iCACA,8BACA,kBACA,kCALF,CAAYA,MAAK,KAQV,MAAMC,EAAe,CAC1B,CAACD,EAAME,KAAM,wBACb,CAACF,EAAMG,WAAY,8BACnB,CAACH,EAAMI,aAAc,gCACrB,CAACJ,EAAMK,KAAM,uBACb,CAACL,EAAMM,aAAc,gCAWVC,GAAW,SACtB,SAAIC,UACF,MAAMC,QAA6B,MAEnC,GAAiB,OAAbA,EACF,MAAM,IAAIC,MAAM,eAKlB,MAAO,CAAEC,IAFG,IAAI,IAAaF,GAEfA,eACb,QAAI,QAII,EAAiC,MAC5C,SAAYG,IACVC,QAAQC,MAAMF,IACP,SAAM,IAAM,IAAe,IAAAG,IAAG,IAAM,SAC1CR,IAGQS,GAAiC,SAAYF,IAAS,QAAIA,IAAQP,GAGlEU,EAAiB,CAAIC,EAAkBC,KAClD,MAAMC,GAAgB,IAAAC,GACpBF,GACA,QAAK,GACL,MACA,SAAYP,IACVC,QAAQC,MAAMF,IACP,SAAa,IAAAG,IAAG,KAAMK,QAE/B,SAAa,KACJ,SAAa,IAAAL,IAAGG,EAAUE,MATf,CAWpB,GACF,OAAO,KAA8BA,ICpEjCE,EAAgB,yBAChBC,EAA6B,2BAKnC,IAAIC,EAAQ,IACZ,KAAOA,EAAMC,OAAS,KAAOD,GAASA,EAE/B,SAASE,EAAUC,GACxB,OAAOL,EAAcM,KAAKD,GAgB5B,SAASE,EAAcC,GACrB,GAAIA,GAAY,GAAKA,GAAY,OAASA,EAAW,GACnD,MAAQ,IAAMN,EAAMO,UAAU,EAAGD,GAGnC,MAAM,IAAIpB,MAAM,wBAIX,SAASsB,EAAQxD,GACtB,GAAIA,EAAI,GACN,MAAM,IAAIkC,MAAM,6BAGlB,IAAIuB,EAAMzD,EAAE0D,SAAS,IAIrB,OAHID,EAAIR,OAAS,IACfQ,EAAM,IAAMA,GAEPA,EAGF,SAASE,EAAY/D,EAAe0D,EAAW,IACpD,MAAMM,EAAaP,EAAcC,GAC3BO,EAAeC,OAAOF,GAC5B,IAAIG,EAAc,GAElB,MAAMC,EAAWpE,EAAQ,GACrBoE,IAAYpE,IAAiB,IAEjC,IAAIqE,GAAYrE,EAAQiE,GAAcH,WAEtC,KAAOO,EAAShB,OAASW,EAAWX,OAAS,GAC3CgB,EAAW,IAAMA,EAGnB,MAAMC,EAAiBD,EAASE,MAAM,wBAWtC,OAVAF,EAAWC,EAAe,GAI1BH,GAFenE,EAAQiE,GAAcH,WAEf,IAAMO,EAExBD,IACFD,EAAc,IAAMnE,GAGfmE,EAGF,SAASK,EAAYxE,EAAe0D,EAAW,IACpD,MAAMM,EAAaP,EAAcC,GAC3Be,EAAmBT,EAAWX,OAEpC,IAAKF,EAA2BK,KAAKxD,GACnC,MAAM,IAAIsC,MAAM,4BAGlB,GAAI0B,EAAWX,OAAS,GAAM,EAC5B,OAAOa,OAAOlE,GAGhB,MAAMoE,EAAsC,MAA1BpE,EAAM2D,UAAU,EAAG,GACjCS,IACFpE,EAAQA,EAAM2D,UAAU,IAE1B,MAAMe,EAAQ1E,EAAM2E,MAAM,KAE1B,IAAIC,EAAQF,EAAM,GACdL,EAAWK,EAAM,GAMrB,GAJKE,IAASA,EAAQ,KACjBP,IAAYA,EAAW,KAGxBA,EAAShB,OAASoB,EAAmB,EACvC,MAAM,IAAInC,MAAM,yCAIlB,KAAO+B,EAAShB,OAASoB,EAAmB,GAAKJ,GAAY,IAE7D,MAAMQ,EAAaX,OAAOU,GACpBE,EAAgBZ,OAAOG,GAE7B,IAAIU,EAAOF,EAAaX,OAAOF,GAAec,EAM9C,OAJIV,IACFW,IAAa,IAGRA,E,uBC7GT,MAAM,GAAgB,CAAiBC,EAAmBC,KAAuE,SAC/H,SAAI9C,IACF,MAAM+C,GAAyB,SAAIC,GAAQA,EAAK,KAAI,EAAAC,EAAA,IAAaC,IAC/DlD,EAASE,SAASiD,GAAGN,EAAWK,IACzB,SAAY,IAAMlD,EAASE,SAASkD,eAAeP,EAAWK,IAAK,UAG5E,OAAO,IAAApC,IACL,SAAKuC,GAAU,CAACrD,EAAUqD,KAC1BP,EACA,KAHK,CAILC,KACD,IAGCO,GAAgB,GAA6B,gBAAgB,SAAIrD,OAAQD,EAAUuD,MAEvFC,OAAOC,SAASC,gBAEF1D,EAASI,IAAIuD,cAAcC,YAErCC,IAAiB,SAAc,SAAI5D,MAAM6D,UAAYA,EAAE1D,IAAIuD,cAAcC,SAAkB,IACpFG,IAAU,QAAMF,GAAgBP,IAEvCU,IAAqB,SAAc,SAAIF,GAAKA,EAAE1D,IAAI6D,gBAAgB,IAClEC,GAAoB,GAAgC,mBAAmB,SAAI,EAAElE,EAAUmE,KAAkBnE,EAASI,IAAI6D,kBAE/GG,IAAc,QAAMJ,GAAoBE,IACxCG,IAA2B,SAAID,GAAeA,EAAY,IAAIA,IAE9DE,IAAoC,SAC/C,SAAItE,GACKA,EAASE,SAASqE,QAAQ,CAAEC,OAAQ,yBAC1C,ICzBCC,IAAU,SAAM,EAAAhI,EAAA,IAAM,CAAEuC,MAAO,gBAAoB0F,UAAW,SAAU3F,SAAU,OAAQ4F,QAAS,WAEnGC,IAAW,SACf,EAAAvI,EAAA,GAAM,CAAEH,SAAU,KAAQI,KAAM,cAAkBC,MAAO,OAAQH,QAAS,YAAaI,QAAQ,EAAAC,EAAA,IAAM,CAAEa,OAAQ,aAC/GmH,GAAQ,YAGJI,IAAW,QACfxH,GAAS,EAAAZ,EAAA,IAAM,CAAGF,MAAO,OAAQ8B,OAAQ,SAAzChB,GACAoH,GAAQ,YAGJK,GAAUL,IAAQ,EAAAhI,EAAA,IAAM,CAAEuC,MAAO,gBAAvByF,G,0BCThB,MAYMM,GAAgB,CAACC,EAAeC,KAC7B,QAAOvG,EAAA,SAAoBA,EAAA,cAA3B,EACL,SAAM,EAAAjC,EAAA,IAAM,CAAEoC,WAAY,SAA1B,CAAqCmG,IACrC,SAAQ,EAAAvI,EAAA,IAAM,CAAEuC,MAAO,gBAAoBkG,aAAc,QAAzD,CACED,IAMAE,GAA0BJ,GAC9B,uBACA,SACE,QAAM,2FACN,SAAQ,OAAK,CAAEK,KAAM,yBAArB,EACE,QAAM,2BAMCC,GAAuB,KAAM,EAAAC,EAAA,IAAU,EACjDC,EAAeC,MAGhB,MAAMC,GAAiB,EAAAC,EAAA,GAAQ,CAAExJ,UAAU,QAAM,mBAA1B,CAA+C,CACpEyJ,MAAOH,GACL,SAAI,IACKlB,KAET,QAKEsB,GAAkB,QAAMnF,EAAiB,GAE/C,MAAO,EACL,SACE,SAAIT,GAEEA,aAAoBG,MACfgF,IAEF,SACL,SAAQ,CAACU,EAAOxB,KACd,YAAgByB,IAAZzB,EACKoB,EAGLI,IAAUpG,EAAME,IACXoF,GAAc,oCAAoC,QAAM,+EAE1D,QAAKrG,EAAA,WAAqB,EAAAjC,EAAA,IAAM,CAAEmC,WAAY,WAA9C,EACL,SAAM,EAAAnC,EAAA,IAAM,CAAEuC,MAAO,kBAArB,CAA4C,cAlE3BoC,EAmEKiD,GAlE3B,SAAK,EAAA5H,EAAA,IAAM,CAAEiB,gBAAiB,gBAAoBH,aAAc,OAAQqB,WAAY,SAAUQ,SAAU,WAAxG,EACL,SAAK,EAAA3C,EAAA,IAAM,CAAEc,aAAc,OAAQqB,WAAY,SAAU+F,QAAS,WAAlE,EACE,QAAMvD,EAAQ2E,MAAM,EAAG,GAAK,MAAQ3E,EAAQ2E,OAAO,MAErD,SAAK,EAAAtJ,EAAA,IAAM,CAAEiB,gBAAiB,kBAAsBW,OAAQ,OAAQO,WAAY,SAAU+F,QAAS,UAAnG,CAbG,SAAmBqB,GACxB,MAAMC,EAAMC,SAASF,EAAOD,MAAM,EAAG,IAAK,IACpCI,EAAK,KAAS,GAAIF,GACxB,OAAO,QAAmBE,EAAnB,GAWHC,CAAUhF,OANc,IAACA,IAqElB2C,GAASM,MAIbuB,IAEL,CACEvB,QAASkB,O,2DCtFf,MAAMc,GAAO,CACX,CACEC,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,iBACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVC,gBAAiB,aACjBD,KAAM,eAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,WACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,cACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,gBACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,aACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,eACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,WACNC,KAAM,SAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,YACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,WACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,YACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,UACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,YACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,OACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,WACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,WACNK,QAAS,CACP,CACEN,aAAc,QACdC,KAAM,GACNC,KAAM,UAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,kBACNC,KAAM,YAGVD,KAAM,oBACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,YAGVD,KAAM,oBACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,WACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,UACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,OACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVD,KAAM,eACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,eACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,OACNK,QAAS,CACP,CACEN,aAAc,SACdC,KAAM,GACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVD,KAAM,cACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,cACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,eACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,iBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,gBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,SACNK,QAAS,CACP,CACEN,aAAc,SACdC,KAAM,GACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,cACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,WACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,eACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,aAIH,MAAMK,GAEX,yBACE,OAAO,IAAI,MAAUT,IAEvB,eACEjF,EACA2F,GAEA,OAAO,IAAI,MAAS3F,EAASiF,GAAMU,IARrB,GAAAC,IAAMX,GCxiBxB,MAAM,GAAO,CACX,CACEM,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,WACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,aACNC,KAAM,YAGVD,KAAM,kBACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,kBACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,aACNC,KAAM,YAGVD,KAAM,uBACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,gBACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,uBACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,KACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVD,KAAM,WACNC,KAAM,SAER,CACEH,OAAQ,GACRE,KAAM,sBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,kBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,YACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,UACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,YACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,GACNC,KAAM,WAER,CACEF,aAAc,SACdC,KAAM,GACNC,KAAM,WAGVD,KAAM,cACNK,QAAS,CACP,CACEN,aAAc,SACdC,KAAM,YACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,WACNK,QAAS,CACP,CACEN,aAAc,QACdC,KAAM,GACNC,KAAM,UAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,kBACNC,KAAM,YAGVD,KAAM,oBACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,YAGVD,KAAM,WACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,QACdC,KAAM,IACNC,KAAM,SAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,IACNC,KAAM,YAGVD,KAAM,gBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,YAGVD,KAAM,YACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,kBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,cACNC,KAAM,YAGVD,KAAM,gBACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,YAGVD,KAAM,oBACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,MACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,UACNC,KAAM,YAGVD,KAAM,OACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,OACNK,QAAS,CACP,CACEN,aAAc,SACdC,KAAM,GACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVD,KAAM,SACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVD,KAAM,iBACNK,QAAS,CACP,CACEN,aAAc,SACdC,KAAM,GACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,QACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,oBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,SACNK,QAAS,CACP,CACEN,aAAc,SACdC,KAAM,GACNC,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,GACRE,KAAM,cACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,WACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,eACNK,QAAS,CACP,CACEN,aAAc,OACdC,KAAM,GACNC,KAAM,SAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,oBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,aAIH,MAAMQ,GAEX,yBACE,OAAO,IAAI,MAAU,IAEvB,eACE7F,EACA2F,GAEA,OAAO,IAAI,MAAS3F,EAAS,GAAM2F,ICzmBvC,IAAYG,GDimBM,GAAAF,IAAM,GCjmBxB,SAAYE,GACV,cACA,gBACA,cACA,cACA,YALF,CAAYA,QAAM,K,eCDX,MCGMC,GAAe,CAC1B,CAAC1H,EAAME,KAAM,CACX,CAACuH,GAAOE,MAAO,6CACf,CAACF,GAAOG,OAAQ,6CAChB,CAACH,GAAOI,MAAO,6CACf,CAACJ,GAAOK,MAAO,+CCWbC,IAAW,SAAKC,GAAmB7F,EAAY6F,EAAIC,cACnDC,IAAkB,SAAgB,CAACC,EAAgBC,IAAmBD,EAAIE,GAAGD,KACtEE,GAAmBrH,EAJC,MAIwC,SAAQT,MAAO+H,EAAahI,IAAaA,EAASI,IAAI6H,WAAWD,IAAc3D,KAC3I6D,GAA2BV,GAASO,IAoBjD,SAASI,GAAgC/G,EAAkBgH,GAEzD,MAAMC,GAAW,SAAIrI,IAEnB,MAAMsI,EAAStI,EAASI,IAAImI,YAE5B,OAAOH,EAAgBhH,EAASkH,KAC/B,GAYGE,EAAqBC,GAAA,GAAmB,CAAEJ,WAAUhE,QAAO,KAE3DqE,GAAgB,SAAQzI,OAASoI,WAAUhE,aACxCgE,EAASM,UAAUtE,IACzBmE,GAEGI,EAAUjB,GAAgBjH,EAlDD,KAkD0CgI,IAGzE,MAAO,CAAEE,UAASC,gBAFMrB,GAASoB,GAEEP,WAAUjH,UAAS0H,OAnBtCjG,IAAsB,SACpC,SAAI,EAAGwF,eACE,EAAApF,EAAA,IAAaC,IAClBmF,EAASlF,GAAGN,EAAWK,GAEhB,IAAMmF,EAASU,IAAIlG,EAAWK,OAEtCsF,KAgBA,MAAMQ,GAAe,CAC1BC,UAAW,CACT7H,QF5EuB,6CE6EvBwH,QAASjB,GAAgBI,IACzBc,gBAAiBX,GACjBG,SAAU,KACVS,OVP6BjG,IAAiC,SAChE,SAAI7C,IACF,MAAM+C,GAAyB,SAAIC,GAAQA,EAAK,KAAI,EAAAC,EAAA,IAAaC,IAC/DlD,EAASE,SAASiD,GAAGN,EAAWK,IACzB,SAAY,IAAMlD,EAASE,SAASkD,eAAeP,EAAWK,IAAK,UAG5E,OAAO,IAAApC,IAAA,CACLiC,KACD,IUDD,SAASmG,EAAYC,GACnB,MAAMX,EAAqBC,GAAA,GAAmB,CAAEzI,SAAU,EAAeqE,QAAO,KAC1EE,GAAU,SAAItE,MAAOmJ,SAIJA,EAAGpJ,SAASE,SAASqE,QAAQ,CAChDC,OAAQ,sBACR6E,OAAQ,CACN,CAAEC,KAAMF,EAAG/E,QAAS6E,KAAIrL,MAAO4D,EAAQ0H,QAI1CX,GAGH,OADuB,QAAcjE,KAIzC,CAAC2C,GAAOE,MAAO,IACVe,GAAYhB,GAAa1H,EAAME,KAAKyH,KAAMN,GAAiByC,SAC9DnI,QAAS+F,GAAa1H,EAAME,KAAKyH,KACjC,SAAS8B,EAAYC,GAEnB,OADuB,SAAc,SAAIK,GAAQA,EAAKC,SAASP,EAAI,WAAeC,KAAUO,KAAKrB,aAIrG,CAACnB,GAAOG,OAAQ,IACXc,GAAYhB,GAAa1H,EAAME,KAAK0H,MAAOJ,GAAkBsC,SAChEnI,QAAS+F,GAAa1H,EAAME,KAAK0H,MACjC,SAAU6B,EAAYC,GAEpB,OADuB,SAAc,SAAIK,GAAQA,EAAKC,SAASP,EAAI,WAAeC,KAAUO,KAAKrB,aAIrG,CAACnB,GAAOK,MAAO,IACVY,GAAYhB,GAAa1H,EAAME,KAAK4H,KAAMN,GAAkBsC,SAC/DnI,QAAS+F,GAAa1H,EAAME,KAAK4H,KACjC,SAAU2B,EAAYC,GAEpB,OADuB,SAAc,SAAIK,GAAQA,EAAKC,SAASP,EAAI,WAAeC,KAAUO,KAAKrB,cCjH1FsB,GAA8B,CACzC,CAAEtN,MAAOc,EAAMkL,SAAUW,GAAaC,UAAWhK,MAAO,WAAYH,OAAQoI,GAAOvH,KACnF,CAAEtD,MAAOa,EAAOmL,SAAUW,GAAazB,KAAMtI,MAAO,SAAUH,OAAQoI,GAAOK,MAC7E,CAAElL,MAAOe,EAAQiL,SAAUW,GAAa3B,MAAOpI,MAAO,QAASH,OAAQoI,GAAOG,OAC9E,CAAEhL,MAAOY,EAAMoL,SAAUW,GAAa5B,KAAMnI,MAAO,UAAWH,OAAQoI,GAAOE,O,yBCGxE,MCIMwC,GAAc,EAAGpL,QAAOqL,kBAA6B,EAAAvE,EAAA,IAAU,EACzEwE,EAAQC,IACRC,EAAoBC,IACpBC,EAAaC,MAGd,MAAMC,GDV8CC,ECUtBV,IDV6C,EAAArE,EAAA,IAAU,EACpFgF,EAAQC,IACRC,EAAeC,IACfC,EAAiBC,MAIlB,MAAMC,GAAoB,QAAU,GAAIF,GAExC,MAAO,EACL,QAAQhM,EAAA,aAAR,EACE,EAAAmM,GAAA,GAAW,CAAE5L,MAAO,SAAUpB,OAAO,WAArC,CAAgD,CAC9CiM,OAAQa,OAGV,SACE,SAAIG,IACF,EAAAC,GAAA,GAAe,CACbC,cAAc,IAAAlK,GAAEpC,EAAA,WAAqB,EAAAjC,EAAA,IAAM,CAAEF,MAAO,WACpD0O,YAAY,SAAI,KAOP,CAAEC,OANMb,EAAKS,QAAOK,GA5BzC,SAAqCA,EAAQC,GAK3C,YAAiBtF,IAJHuF,OAAOC,OAAOH,GAAKI,MAAK1N,GACZ,iBAAVA,IAAuF,IAAjEA,EAAM2N,oBAAoBC,QAAQL,EAAKI,uBA0B/BE,CAAyBP,EAAKL,KAASa,KAAInN,GAC/C+L,GAAa,OAAM,UAAU,QAAS/L,GAE3DoN,CAAoBrN,EAAYC,GAAO,QAAMA,EAAM6J,SAASQ,qBAGpDgD,SAAU,OAC1B,QAAUrB,KAVf,CAWG,CACDA,cAAeC,OAEjBG,KAKN,CAAEN,eC1BqC,CACvCA,OAAQH,EAAkB,QAGtBtM,GAAQ,SAAM,QAAS,GAAIW,GAAQqL,GAEnCiC,GAAkB,SACtB,SAAItN,GACKA,EAAM6J,SAASQ,iBACrBrK,IDnBmB,IAA4B6L,ECsBpD,MAAO,EACL,QAAK3L,EAAA,WAAqB,EAAAjC,EAAA,IAAM,CAAEmC,WAAY,SAAUW,KAAM,IAA9D,EAEE,EAAAwM,GAAA,GAAS,CACPC,cAAc,QAAS5B,EAAYJ,GACnCiC,QAAS/B,GAFX,EAKE,QAAKD,GAAyB,OAAM,UAAWvL,EAAA,gBAA0B,EAAAjC,EAAA,IAAM,CAAEmC,WAAY,SAAUD,OAAQ,YAA/G,EACE,SAAa,SAAIuN,IAAK,EAAAzP,EAAA,IAAM,CAAEF,MAAO,OAAQ8B,OAAQ,OAAS6N,EAAE7P,QAAQmC,KACxE,EAAAnC,EAAA,GAAM,CAAEH,SAAUW,EAAYN,MAAO,OAAQH,QAAS,kBAP1D,CASE,KAEF,SACE,EAAA+P,GAAA,GAAO,CACLtO,QACAuO,WAAY,CAAEC,kBAAmB,cAAexN,WAAY,SAAUE,SAAU,UAChFuN,SAAS,IAAAxL,IACP,QACE,SAAIyL,IACK,CAAEA,iBACRT,MAPT,CAUG,CACDhC,OAAQC,QAKd,CAAED,SAAQI,mBCtDDsC,IAAqB,EAAAlH,EAAA,IAAU,EACzCmH,EAAsBC,IACtBC,EAAsBC,IACtBC,EAAsBC,IACtBC,EAAsBC,IACtBC,EAAsBC,IACtBC,EAAsBC,IACtBC,EAAsBC,MAGvB,MAAMC,EAAoB5D,GAAU,GAC9BnL,EAAQiK,GAAA,GAAmBsE,EAAmBQ,GAC9C3E,GAAU,SAAa,SAAIsD,GAAKA,EAAE7D,SAASO,SAASpK,IAEpDgP,GAAgC,SAAS,CAAC5E,EAAS6E,KACvD,MACMC,EADY9E,EAAQlB,WACQ,KAAQ3F,OAAO4L,KAAKC,MAAe,IAATH,IAE5D,MAAO,CAAEI,cAAejM,EAAY8L,GAAgB7P,MAAO6P,KAC1D9E,EAASiE,GAENiB,GAAgB,SAAS,CAAClF,EAASmF,IAChCC,OAAOpM,EAAYS,EAAW0L,KAAgBC,OAAOpM,EAAYgH,EAAQlB,cAC/EkB,EAAS6D,GAENwB,GAAc,QAClBxF,GAAA,GAAiC,CAC/BjK,QACA8K,KAAMjF,GACN6E,IAAI,QAAMmE,EAAgBJ,GAC1BpP,OAAO,QAAW,EAChB,SAAIqQ,GAAKA,EAAErQ,OAAO2P,IAClB,QAAInL,EAAYoK,QAKhB0B,GAAkB,QAAOF,EAAad,GAEtCiB,EAAc3F,GAAA,IAAmB,QAAW,CAACqF,EAAejB,IAAkB,GAG9EwB,GAA2B,SAAQ,EAAA5R,EAAA,IAAM,CAAEkI,QAAS,aAAzB,CCpDZ,GAAG9G,QAAOyQ,OAAO,QAAU,EAAAhJ,EAAA,IAAU,EAAEwE,EAAQC,MAClE,MAAMwE,EAAoB,CACtB7Q,gBAAiB,aACjBH,aAAc,MACdhB,MAAO,OACP8B,OAAQ,OACRmQ,WAAY,OACZ7P,OAAQ,QAEZ,MAAO,EACH,QAAS,QAAT,EAAkB,EAAAlC,EAAA,IAAM,CAAEF,MAAO,OAAQ8B,OAAQ,MAAOf,OAAQ,IAAKmR,WAAY,cAAeD,WAAY,OAAQE,QAAS,OAAQC,WAAY,gBAAoB,EAAAlS,EAAA,IAAY,yBAA0B8R,GAE3MxE,GAAa,OAAM,UAAU,SAAI6E,IAC7B,MAAMC,EAASD,EAAIC,OACnB,OAAOb,OAAOa,EAAOhR,YACpB,OAAK,CAAE4I,KAAM,QAASqI,IAAK,EAAGC,IAAK,EAAGT,UAAS,IAAAxN,IAAE,SAAIkO,IAAQ,SAAM,QAAIA,IAAO,SAAO,KAAM,IAAO,SAAIC,IAEvGD,EAAKE,QAAQrR,MAAQsR,OAAOF,KAC7BpR,OAAW,MARd,GASA,CAAEiM,cDkCNsF,CAAQ,CAAEvR,MAAOuQ,GAAjBgB,CAAiC,CAC/BtF,OAAQgD,OAIZ,MAAO,EAEL,QAAQpO,EAAA,aAAR,EACE,EAAAqN,GAAA,GAAS,CACPC,cAAc,QAASqC,EAA0B1B,GACjDhI,QAAS,IAFX,EAIE,QAAKjG,EAAA,WAAqB,EAAAjC,EAAA,IAAM,CAAEmC,WAAY,WAA9C,CACEgL,GAAY,CAAEpL,MAAOA,EAAOqL,aAAa,SAAIqE,GAAKA,EAAEL,eAAeL,IAAnE5D,CAAqG,CACnGE,OAAQ4C,IACRxC,YAAa8C,MAEfJ,GAAoB,OAAM,SAA1BA,CACEhP,EAAa,CAAEC,MAAOuQ,EAAajS,KAAM,OAAQ2B,SAAU,CAAEO,OAAQ,OAAQM,OAAQ,eAV3F,CAaE,KAEF,EAAAlC,EAAA,IAAM,CAAEa,OAAQ,WAAhB,CACE+B,EAAgB,aAGlB,EAAA8M,GAAA,GAAO,CACLtO,OAAO,QAAU,GAAIwP,GACrBjB,WAAY,CAAEC,kBAAmB,cAAexN,WAAY,SAAUE,SAAU,OAChFuN,SAAS,IAAAxL,GACPwM,GACE,OAAM,UACN,SAAIrN,MAAMoP,GAAcC,UAAUC,UAAUC,WAAWC,OAAM,IAAM,OACnE,MACA,SAAOC,GAAavO,EAAUuO,OAEhC,OAAK,CAAEnD,YAAa,mBACpB,EAAA9P,EAAA,IAAM,CAAEkT,UAAW,aAXvB,CAaG,CACD7F,OAAQoD,OAGV,SAAK,EAAAzQ,EAAA,IAAM,CAAE6C,aAAc,WAA3B,EACE,EAAAoG,EAAA,GAAQ,CACNxJ,UAAU,QAAM,QAChB0T,UAAU,SAAU,GAAM,SAAIC,IACD,IAApB1O,EAAU0O,EAAE3G,KAAiB2G,EAAEhS,OAAS,IAC9CoQ,KAJL,CAKG,CACDtI,MAAOyH,QAKb,CACED,KAAMgB,OEpFC2B,IAAoB,EAAAxK,EAAA,IAAU,EACxC6H,EAAMC,IACN2C,EAAiBC,IACjBC,EAAQC,IACR7L,EAAS8L,MAGV,MAAMC,GAAkB,SAAM,QAAI,MAAOL,GAEzC,MAAO,EACL,QAAQrR,EAAA,cAAwB,EAAAjC,EAAA,IAAM,CAAE6C,aAAc,SAAUV,WAAY,WAA5E,CACEyG,KAAuB,CACrBhB,QAAS8L,OAGX,QAAM,MAAY,EAAA1T,EAAA,IAAM,CAAEc,aAAc,OAAQoH,QAAS,OAAQpI,MAAO,UAAxE,EACE,SACE,QAAW,EACT,SAAI,IAAMiQ,GAAmB,CAC3BW,KAAMC,OACJgD,IACJ,SAAInC,IACF,eCpCgBoC,EDqCA,CAAEpC,gBCrC2B,EAAA3I,EAAA,IAAU,EAClEgL,EAASC,IACTC,EAASC,KAGH,EACL,QAAQ/R,EAAA,aAAR,EACE,SAAM,EAAAjC,EAAA,IAAM,CAAEkT,UAAW,SAAU5Q,SAAU,SAA7C,CACE,uBAGF,QAAQL,EAAA,gBAA0B,EAAAjC,EAAA,IAAM,CAAEmC,WAAY,WAAtD,CACEL,EAAY8R,EAAUpC,YAAYzP,QAElC,SAAM,EAAA/B,EAAA,IAAM,CAAEoC,WAAY,SAA1B,CACE+C,EAAYyO,EAAUpC,YAAYpQ,UAItC,EAAApB,EAAA,IAAM,CAAEa,OAAQ,WAAhB,CACE+B,EAAgB,aAGlB,SAAM,EAAA5C,EAAA,IAAM,CAAEsC,SAAU,MAAO4Q,UAAW,WAA1C,CAAuDU,EAAUpC,YAAY/E,KAE7E,QAAKxK,EAAA,WAAqB,EAAAjC,EAAA,IAAM,CAAE6C,aAAc,SAAUV,WAAY,SAAU8R,WAAY,SAA5F,EACE,QAAQD,GAAW,OAAM,UAAzB,EACE,QAAM,UAER,EAAA/K,EAAA,GAAQ,CAAExJ,UAAU,QAAM,SAA1B,CAAqC,CACnCyJ,MAAO4K,GACL,SAAStQ,MAAOD,GACGqQ,EAAUpC,YAAYzP,MAAM6J,SAASoB,SAAS4G,EAAUpC,YAAY/E,GAAImH,EAAUpC,YAAYpQ,QAE9G,GACH,KACA,UAMR,CAAEyS,UAASE,YDLgC,CAC7BF,QAASJ,IACTM,KAAMR,OCvCK,IAACK,ID0ChBlD,IACF,SAAItM,IACF,Ob3Bc,CAACoP,IAAmB,EAAA3K,EAAA,IAAU,EACvDqL,EAAOC,MAGR,MAAMC,EejCoB,CAACZ,GAAmBvP,EAAe,KAAK,SAAI0I,GAAMA,EAAGhJ,IAAI0Q,sBAAsBb,MfiCvFc,CAAad,GACzBe,GAAgB,SAAIC,GAAWA,GAASD,eAAiB,GAAGH,GAE5DpM,GAAU,IAAA3D,IACd,SAAKmQ,GAAgCA,GAASC,SAC9C,MACA,SAAOA,GAAUlD,OAAOmD,UAAUD,MAClC,SAAIA,GACgB,IAAXA,EAAetM,GAAWE,MAEnC,QAAUD,IACV,KARc,CASdgM,GAGF,MAAO,EACL,QAAQnS,EAAA,cAAwB,EAAAjC,EAAA,IAAM,CAAEmC,WAAY,WAApD,EACE,SAAM,EAAAnC,EAAA,IAAM,CAAEsC,SAAU,SAAxB,CACE,uBAGF0F,GAEA,QAAK/F,EAAA,cAAL,EACE,QAAM,oBACN,EAAA0S,EAAA,GAAc,CAAEC,eAAgB,cAAkBC,eAAgB,aAAiBC,OAAQP,MAG7F,QAAKtS,EAAA,UAAL,EACE,QAAM,cACN,QAAS,IAAT,EAAc,EAAAjC,EAAA,IAAM,CAAEuC,MAAO,gBAAoB,QAAa,SAAI6G,IAAS,CAAGT,KAAM1F,EAAamG,GAAS,MAAQoK,KAAWlM,KAA7H,EACE,SF/CuB3C,EE+CA6O,EFpD1B,SAAwB7O,EAAiBoQ,EAAW,EAAGC,EAAU,GACtE,OAAOrQ,EAAQ2E,MAAM,EAAG0L,GAAW,MAAQrQ,EAAQ2E,MAAM3E,EAAQF,OAAQsQ,EAAUpQ,EAAQF,QAKpFwQ,CAAetQ,EAAS,EAAG,QEkD9B,EAAAsE,EAAA,GAAQ,CAAExJ,UAAU,QAAM,UAA1B,CAAsC,CACpCyJ,MAAOiL,OAIX,CAAED,UFxDC,IAA0BvP,KewCjBuQ,CAA2B,iBAAP9Q,EAAkBA,EAAKA,EAAG+Q,KAA9CD,CAAqD,CACnDhB,MAAOX,QAGbC,a","file":"457.a0217bba651aa8ca1c53.js","sourcesContent":["import { $svg, attr, StyleCSS, motion, MOTION_NO_WOBBLE, styleInline, style, $node, $text, $Node } from \"@aelea/core\"\nimport { $column, $icon, $row, layoutSheet } from \"@aelea/ui-components\"\nimport { pallete } from \"@aelea/ui-components-theme\"\nimport { empty, map } from \"@most/core\"\nimport { Stream } from \"@most/types\"\nimport { Token } from \"./types\"\n\nconst $cryptoIcon = ($content: $Node, size = '32px', viewBox = '0 0 32 32') => $icon({\n  $content,\n  fill: pallete.message,\n  width: size,\n  viewBox,\n  svgOps: style({\n    minWidth: '32px'\n  }),\n})\n\nconst $g = $svg('g')\n\nexport const $path = $svg('path')\n\n\nexport const $caretDown = $path(attr({ d: 'M4.616.296c.71.32 1.326.844 2.038 1.163L13.48 4.52a6.105 6.105 0 005.005 0l6.825-3.061c.71-.32 1.328-.84 2.038-1.162l.125-.053A3.308 3.308 0 0128.715 0a3.19 3.19 0 012.296.976c.66.652.989 1.427.989 2.333 0 .906-.33 1.681-.986 2.333L18.498 18.344a3.467 3.467 0 01-1.14.765c-.444.188-.891.291-1.345.314a3.456 3.456 0 01-1.31-.177 2.263 2.263 0 01-1.038-.695L.95 5.64A3.22 3.22 0 010 3.309C0 2.403.317 1.628.95.98c.317-.324.68-.568 1.088-.732a3.308 3.308 0 011.24-.244 3.19 3.19 0 011.338.293z' }))()\nexport const $caretDblDown = $path(attr({ d: 'M15.97 28.996c-.497 0-.983-.176-1.37-.493L1.77 17.793a2.15 2.15 0 01-.275-3.021 2.142 2.142 0 013.017-.276l11.465 9.6 11.464-9.254a2.143 2.143 0 013.011.311l.006.012a2.14 2.14 0 01-.175 3.022l-.124.106-12.83 10.345c-.41.258-.884.387-1.358.358z M15.97 18.996c-.497 0-.983-.176-1.37-.493L1.77 7.793a2.15 2.15 0 01-.275-3.021 2.142 2.142 0 013.017-.276l11.465 9.6L27.44 4.842a2.143 2.143 0 013.011.311l.006.012a2.14 2.14 0 01-.175 3.022l-.124.106-12.83 10.345c-.41.258-.884.387-1.358.358z' }))()\n\n\nexport const $circle = $path(attr({ d: 'M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831' }))\n\n\nexport const $xrd = $cryptoIcon(\n  $path(attr({ d: 'M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-3.825-7.457c.175.286.525.457.875.457h.117c.408-.057.7-.286.875-.629l5.891-13.2H26V9h-6.767a1.08 1.08 0 00-.991.629l-5.425 12.114-3.559-4.8c-.175-.286-.525-.457-.875-.457H5v2.171h2.8l4.375 5.886z' }))()\n)\nexport const $usdt = $cryptoIcon(\n  $path(attr({ d: 'M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm1.057-12.972v-5.86h.77c2.545 0 3.172-2.373 3.172-2.373h-6.683c-3.172 0-3.71 2.374-3.71 2.374h3.943v8.817s2.508-.753 2.508-2.958zm7.338 4.566c2.248-2.336 3.11-5.58 2.301-8.683a9.339 9.339 0 00-2.48-4.28c-.108-.106-.216-.214-.342-.32l-.108-.107a2.185 2.185 0 00-.234-.196l-.144-.107-.215-.16-.127-.09a4.15 4.15 0 01-.251-.178l-.163-.106a1.38 1.38 0 00-.215-.125l-.162-.107c-.072-.036-.144-.09-.216-.125l-.162-.09a2.52 2.52 0 00-.234-.106l-.055-.018c.198.16.395.339.575.517a8.75 8.75 0 010 12.427c-4.386 4.35-11.505 4.35-15.893 0-.162-.16-.306-.32-.467-.48l-.126-.143a5.762 5.762 0 01-.27-.339 11.856 11.856 0 002.176 2.995c4.584 4.546 12.026 4.546 16.61 0a.614.614 0 00.202-.18zM10.4 22.386a8.168 8.168 0 01-.576-.517 8.758 8.758 0 010-12.439c4.391-4.354 11.516-4.354 15.907 0 .306.304.593.625.863.964a11.784 11.784 0 00-2.177-2.98c-4.588-4.551-12.038-4.551-16.626 0-.054.053-.108.125-.18.178-3.041 3.177-3.455 7.924-1.025 11.529.954 1.39 2.284 2.55 3.814 3.265z'  }))()\n)\nexport const $eth = $cryptoIcon(\n  $g(\n    $path(attr({ d: 'M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.994-15.781L16.498 4 9 16.22l7.498 4.353 7.496-4.354zM24 17.616l-7.502 4.351L9 17.617l7.498 10.378L24 17.616z' }))(),\n    $path(attr({ 'fill-opacity': '.298', d: 'M16.498 4v8.87l7.497 3.35zm0 17.968v6.027L24 17.616z' }))(),\n    $path(attr({ 'fill-opacity': '.801', d: 'M16.498 20.573l7.497-4.353-7.497-3.348z' }))(),\n    $path(attr({ 'fill-opacity': '.298', d: 'M9 16.22l7.498 4.353v-7.701z' }))(),\n  )\n)\n\n\nexport const $sushi = $cryptoIcon(\n  $path(attr({ 'fill-rule': 'evenodd', d: 'M16 32c8.837 0 16-7.163 16-16S24.837 0 16 0 0 7.163 0 16s7.163 16 16 16zM13.156 6.023c-1.562-.123-2.77.256-3.396 1.116l-4.302 5.897c-.625.86-.604 2.11.021 3.522.865 1.945 2.865 4.249 5.615 6.174 2.74 1.935 5.604 3.061 7.76 3.245 1.552.123 2.77-.256 3.396-1.116l4.291-5.897c.625-.86.605-2.11-.02-3.522-.854-1.945-2.865-4.249-5.604-6.184-2.75-1.925-5.605-3.061-7.76-3.235zm12.698 9.706c.49 1.126.594 2.13.094 2.805l-.032.051c-.51.645-1.479.86-2.708.768-2.052-.164-4.77-1.26-7.385-3.102-2.615-1.843-4.542-4.024-5.365-5.887-.49-1.106-.593-2.079-.125-2.765l.021-.04c.5-.687 1.49-.912 2.74-.81 2.052.164 4.77 1.26 7.385 3.103 2.625 1.843 4.552 4.024 5.375 5.877zm-3.906-1.26c-.406-.931-1.375-2.027-2.688-2.948-1.302-.922-2.666-1.465-3.687-1.557-.583-.04-1.052.052-1.281.369-.23.317-.167.778.062 1.3.406.932 1.375 2.017 2.688 2.939 1.312.921 2.666 1.474 3.697 1.556.573.051 1.042-.041 1.271-.358.24-.318.177-.778-.062-1.3zM9.484 9.24a.155.155 0 00-.163-.148.155.155 0 00-.15.16l.011.167a.155.155 0 00.168.141.154.154 0 00.144-.165 4.145 4.145 0 01-.01-.155zm.046.465a.156.156 0 00-.178-.13.154.154 0 00-.131.176c.198 1.288.931 2.526 1.848 3.64a.158.158 0 00.22.024.152.152 0 00.023-.216c-.901-1.096-1.596-2.284-1.782-3.494zm4.661 6.323a.158.158 0 00-.22.016.152.152 0 00.016.217l.125.105c.052.044.105.087.159.13a.158.158 0 00.22-.02.152.152 0 00-.021-.216 12.421 12.421 0 01-.155-.128l-.124-.104zm.596.482a.158.158 0 00-.22.027.152.152 0 00.028.215c1.313 1.006 2.906 1.885 4.488 2.514a.157.157 0 00.203-.085.153.153 0 00-.086-.2c-1.558-.619-3.125-1.484-4.413-2.47zm9.576 3.71a.154.154 0 00.13-.176.156.156 0 00-.18-.128c-.063.01-.128.02-.195.027a.157.157 0 00-.112.066.151.151 0 00-.026.103c.01.085.087.145.173.136a4.56 4.56 0 00.21-.028z' }))(),\n)\n\nexport const $spinner = $node(style({\n  margin: '0 auto',\n  borderRadius: '50%',\n  border: `4px ${pallete.message} dashed`,\n  boxShadow: `inset 0px 0px 0px 3px ${pallete.message}`,\n  backgroundColor: 'transparent',\n  animation: 'spinner 5s linear infinite',\n}))\n\nexport interface Gauge {\n  styleCSS?: StyleCSS\n  size?: string\n  value: Stream<number>\n}\n\nexport const $gaugeMetric = ({ value, size = '24px', styleCSS }: Gauge) => {\n\n  const animateChange = motion(MOTION_NO_WOBBLE, 0, value)\n  const attrAniamtion = styleInline(map(n => ({\n    strokeDasharray: `${n * 100}, 100`,\n    stroke: n > 1 ? pallete.negative : ''\n  }), animateChange))\n\n  return $svg('svg')(style({ display: 'block', width: size, height: size, ...styleCSS }), attr({ viewBox: '0 0 36 36' }))(\n    $circle(style({ fill: 'none', stroke: pallete.middleground, strokeWidth: '3.8' }))(),\n    $circle(style({ fill: 'none', stroke: pallete.foreground, strokeWidth: '3.8' }), attrAniamtion)()\n  )\n}\n\n\nexport const $tokenLabel = (token: Token, $label?: $Node) => {\n  return $row(layoutSheet.spacing, style({ cursor: 'pointer', alignItems: 'center' }))(\n    token.$icon,\n    $column(layoutSheet.flex)(\n      $text(style({ fontWeight: 'bold' }))(token.symbol),\n      $text(style({ fontSize: '75%', color: pallete.foreground }))(token.label)\n    ),\n    style({ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden' }, $label || empty())\n  )\n}\n\nexport const $labeledDivider = (label: string) => {\n  return $row(layoutSheet.spacing, style({ placeContent: 'center', alignItems: 'center' }))(\n    $column(style({ flex: 1, borderBottom: `1px solid ${pallete.middleground}` }))(),\n    $row(layoutSheet.spacingSmall, style({ color: pallete.foreground, alignItems: 'center' }))(\n      $text(style({ fontSize: '75%' }))(label),\n      $icon({ $content: $caretDblDown, width: '10px', viewBox: '0 0 32 32', fill: pallete.foreground }),\n    ),\n    $column(style({ flex: 1, borderBottom: `1px solid ${pallete.middleground}` }))(),\n  )\n}","import { fromCallback, O, Op } from \"@aelea/core\"\nimport { observer } from \"@aelea/ui-components\"\nimport { Web3Provider } from \"@ethersproject/providers\"\nimport detectEthereumProvider from \"@metamask/detect-provider\"\nimport { awaitPromises, now, at, map, chain, recoverWith, continueWith, switchLatest, take } from \"@most/core\"\nimport { disposeWith } from \"@most/disposable\"\nimport { Stream } from \"@most/types\"\n\nexport enum CHAIN {\n  ETH = 1,\n  ETH_ROPSTEN = 3,\n  ETH_KOVAN = 42,\n  BSC = 56,\n  BSC_TESTNET = 97\n}\n\nexport const EXPLORER_URL = {\n  [CHAIN.ETH]: \"https://etherscan.io/\",\n  [CHAIN.ETH_KOVAN]: \"https://kovan.etherscan.io/\",\n  [CHAIN.ETH_ROPSTEN]: \"https://ropsten.etherscan.io/\",\n  [CHAIN.BSC]: \"https://bscscan.com/\",\n  [CHAIN.BSC_TESTNET]: \"https://testnet.bscscan.com/\",\n} as const\n\n\nexport type InitWalletProvider = {\n  w3p: Web3Provider;\n  metamask: any;\n}\n\n\n\nexport const provider = awaitPromises(\n  map(async () => {\n    const metamask: any | null = await detectEthereumProvider()\n\n    if (metamask === null) {\n      throw new Error('No provider')\n    }\n\n    const w3p = new Web3Provider(metamask)\n\n    return { w3p, metamask } as InitWalletProvider\n  }, now(null))\n)\n\n// TODO(await fix) ATM recovering from provider failure is not possible with metamask\nexport const awaitProvider: typeof provider = observer.duringWindowActivity(\n  recoverWith(err => {\n    console.error(err)\n    return chain(() => awaitProvider, at(3000, null))\n  }, provider)\n)\n\nexport const noProviderAlert: Stream<Error> = recoverWith(error => now(error), provider)\n\n\nexport const providerAction = <T>(interval: number, actionOp: Op<InitWalletProvider, Promise<T>>) => {\n  const tx: Stream<T> = O(\n    actionOp,\n    take(1),\n    awaitPromises,\n    recoverWith(err => {\n      console.error(err)\n      return switchLatest(at(1500, tx))\n    }),\n    continueWith(() => {\n      return switchLatest(at(interval, tx))\n    }),\n  )(awaitProvider)\n  return observer.duringWindowActivity(tx)\n}\n\nexport const metamaskEvent = <A>(eventName: string): Stream<A> => switchLatest(\n  map(provider => {\n    const eventChange: Stream<A> = map(args => args[0], fromCallback(cb => {\n      provider.metamask.on(eventName, cb)\n      return disposeWith(() => provider.metamask.removeListener(eventName, cb), null)\n    }))\n\n    return O(\n    )(eventChange)\n  }, awaitProvider)\n)\n","import { CHAIN } from \"./provider\"\n\nconst zXAdressRegxp = /^(0x)?[0-9a-fA-F]{40}$/\nconst validFractionalNumberRegxp = /^-?(0|[1-9]\\d*)(\\.\\d+)?$/\n\n\n\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\"\nwhile (zeros.length < 256) { zeros += zeros }\n\nexport function isAddress(address: string) {\n  return zXAdressRegxp.test(address)\n}\n\nexport function shortenAddress(address: string, padRight = 4, padLeft = 6) {\n  return address.slice(0, padLeft) + \"...\" + address.slice(address.length -padRight, address.length)\n}\n\n\nexport function shortenTxAddress(address: string) {\n  return shortenAddress(address, 8, 6)\n}\n\nexport function expandDecimals(n: bigint, decimals: number) {\n  return n * (10n ** BigInt(decimals))\n}\n\nfunction getMultiplier(decimals: number): string {\n  if (decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n    return (\"1\" + zeros.substring(0, decimals))\n  }\n\n  throw new Error(\"invalid decimal size\")\n}\n\n/* converts bigInt(positive) to hex */\nexport function bnToHex(n: bigint) {\n  if (n < 0n) {\n    throw new Error('expected positive integer')\n  }\n\n  let hex = n.toString(16)\n  if (hex.length % 2) {\n    hex = '0' + hex\n  }\n  return hex\n}\n\nexport function formatFixed(value: bigint, decimals = 18): string {\n  const multiplier = getMultiplier(decimals)\n  const multiplierBn = BigInt(multiplier)\n  let parsedValue = ''\n\n  const negative = value < 0n\n  if (negative) { value = value * -1n }\n\n  let fraction = (value % multiplierBn).toString()\n\n  while (fraction.length < multiplier.length - 1) {\n    fraction = \"0\" + fraction\n  }\n\n  const matchFractions = fraction.match(/^([0-9]*[1-9]|0)(0*)/)!\n  fraction = matchFractions[1]\n\n  const whole = (value / multiplierBn).toString()\n\n  parsedValue = whole + \".\" + fraction\n\n  if (negative) {\n    parsedValue = \"-\" + value\n  }\n\n  return parsedValue\n}\n\nexport function parseFixed (value: string, decimals = 18) {\n  const multiplier = getMultiplier(decimals)\n  const multiplierLength = multiplier.length\n\n  if (!validFractionalNumberRegxp.test(value)) {\n    throw new Error('invalid fractional value')\n  }\n\n  if (multiplier.length - 1 === 0) {\n    return BigInt(value)\n  }\n\n  const negative = (value.substring(0, 1) === \"-\")\n  if (negative) {\n    value = value.substring(1)\n  }\n  const comps = value.split(\".\")\n\n  let whole = comps[0]\n  let fraction = comps[1]\n\n  if (!whole) { whole = \"0\" }\n  if (!fraction) { fraction = \"0\" }\n\n  // Prevent underflow\n  if (fraction.length > multiplierLength - 1) {\n    throw new Error('fractional component exceeds decimals')\n  }\n\n  // Fully pad the string with zeros to get to wei\n  while (fraction.length < multiplierLength - 1) { fraction += \"0\" }\n\n  const wholeValue = BigInt(whole)\n  const fractionValue = BigInt(fraction)\n\n  let wei = (wholeValue * BigInt(multiplier)) + fractionValue\n\n  if (negative) {\n    wei = wei - -1n\n  }\n\n  return wei\n}\n\nexport const trimZeroDecimals = (amount: string) => {\n  if (parseFloat(amount) === parseInt(amount)) {\n    return parseInt(amount).toString()\n  }\n  return amount\n}\n\nexport const limitDecimals = (amount: string, maxDecimals: number) => {\n  let amountStr = amount.toString()\n\n  if (maxDecimals === 0) {\n    return amountStr.split(\".\")[0]\n  }\n  const dotIndex = amountStr.indexOf(\".\")\n  if (dotIndex !== -1) {\n    const decimals = amountStr.length - dotIndex - 1\n    if (decimals > maxDecimals) {\n      amountStr = amountStr.substr(0, amountStr.length - (decimals - maxDecimals))\n    }\n  }\n  return amountStr\n}\n\nexport const padDecimals = (amount: string, minDecimals: number) => {\n  let amountStr = amount.toString()\n  const dotIndex = amountStr.indexOf(\".\")\n  if (dotIndex !== -1) {\n    const decimals = amountStr.length - dotIndex - 1\n    if (decimals < minDecimals) {\n      amountStr = amountStr.padEnd(amountStr.length + (minDecimals - decimals), \"0\")\n    }\n  } else {\n    amountStr = amountStr + \".0000\"\n  }\n  return amountStr\n}\n\n\n\n","import { O } from \"@aelea/core\"\nimport { fromCallback } from \"@aelea/core\"\nimport { Network } from \"@ethersproject/providers\"\nimport { awaitPromises, map, merge, switchLatest } from \"@most/core\"\nimport { disposeWith } from \"@most/disposable\"\nimport { Stream } from \"@most/types\"\nimport { awaitProvider, CHAIN, InitWalletProvider } from \"./provider\"\nimport { Address } from \"./types\"\n\nconst metamaskEvent = <A, B = unknown>(eventName: string, action: (a: Stream<[InitWalletProvider, A]>) => Stream<Promise<B>>) => switchLatest(\n  map(provider => {\n    const eventChange: Stream<A> = map(args => args[0], fromCallback(cb => {\n      provider.metamask.on(eventName, cb)\n      return disposeWith(() => provider.metamask.removeListener(eventName, cb), null)\n    }))\n\n    return O(\n      map((ev: A) => [provider, ev]),\n      action,\n      awaitPromises,\n    )(eventChange)\n  }, awaitProvider)\n)\n\nconst networkChange = metamaskEvent<string, CHAIN>('chainChanged', map(async ([provider, _chainId]) => {\n  // ethers.js does not support provider switch, hacky reload is required.. pffft\n  window.location.reload()\n\n  return (await provider.w3p.getNetwork()).chainId\n}))\nconst initialNetwork = awaitPromises(map(async p => (await p.w3p.getNetwork()).chainId as CHAIN, awaitProvider))\nexport const network = merge(initialNetwork, networkChange)\n\nconst initialAccountList = awaitPromises(map(p => p.w3p.listAccounts(), awaitProvider))\nconst accountListChange = metamaskEvent<string, string[]>('accountsChanged', map(([provider, _accountHash]) => provider.w3p.listAccounts()))\n\nexport const accountList = merge(initialAccountList, accountListChange)\nexport const account: Stream<Address> = map(accountList => accountList[0], accountList)\n\nexport const requestAccounts: Stream<string[]> = awaitPromises(\n  map(provider => {\n    return provider.metamask.request({ method: 'eth_requestAccounts' })\n  }, awaitProvider)\n)\n\nexport const addEthereumChain = (chainId = '0x56'): Stream<string[]> => awaitPromises(\n  map(provider => {\n    return provider.metamask.request({\n      method: 'wallet_addEthereumChain', params: [\n        {\n          chainId,\n          chainName: 'Binance Smart Chain',\n          nativeCurrency: { name: 'BNB', symbol: 'BNB', decimals: 18 },\n          rpcUrls: ['https://bsc-dataseed.binance.org/'],\n          blockExplorerUrls: ['https://bscscan.com/']\n        }\n      ]\n    })\n  }, awaitProvider)\n)\n\n\n","import { attrBehavior, O } from \"@aelea/core\"\nimport { $element, $text, attr, Behavior, component, style } from \"@aelea/core\"\nimport { $Button, $column, $icon, $NumberTicker, $row, layoutSheet } from \"@aelea/ui-components\"\nimport { pallete } from \"@aelea/ui-components-theme\"\nimport { TransactionReceipt } from \"@ethersproject/providers\"\nimport { filter } from \"@most/core\"\nimport { map, skipRepeats, startWith, switchLatest } from \"@most/core\"\nimport { getTxDetails } from \"../api/transaction\"\nimport { shortenTxAddress } from \"../api/utils\"\nimport { $spinner } from \"../$elements\"\nimport { $check } from \"../../../../elements/$icons\"\nimport { network } from \"../api/account\"\nimport { EXPLORER_URL } from \"../api/provider\"\n\n\n\n\nconst $status = $text(style({ color: pallete.foreground, fontStyle: 'italic', fontSize: '19px', padding: '3px 0' }))\n\nconst $success = $column(\n  $icon({ $content: $check, fill: pallete.positive, width: '55px', viewBox: '0 0 24 24', svgOps: style({ margin: '0 auto' }) }),\n  $status(`Success`)\n)\n\nconst $pending = $column(\n  $spinner(style({  width: '55px', height: '55px', }))(),\n  $status(`Pending`)\n)\n\nconst $failed = $status(style({ color: pallete.negative }))()\n\n\nexport const $Transaction = (txHash: string) => component((\n  [close, sampleTether]: Behavior<any, any>,\n) => {\n\n  const txDetails = getTxDetails(txHash)\n  const confirmations = map(details => details?.confirmations ?? 0, txDetails)\n\n  const $status = O(\n    map((details: TransactionReceipt) => details?.status),\n    skipRepeats,\n    filter(status => Number.isInteger(status)),\n    map(status => {\n      return status === 1 ? $success : $failed\n    }),\n    startWith($pending),\n    switchLatest\n  )(txDetails)\n\n\n  return [\n    $column(layoutSheet.spacingBig, style({ alignItems: 'center' }))(\n      $text(style({ fontSize: '25px' }))(\n        'Transaction Details'\n      ),\n\n      $status,\n\n      $row(layoutSheet.spacingTiny)(\n        $text('Confirmations: '),\n        $NumberTicker({ incrementColor: pallete.positive, decrementColor: pallete.message, value$: confirmations })\n      ),\n\n      $row(layoutSheet.spacing)(\n        $text('Tx Hash: '),\n        $element('a')(style({ color: pallete.primary }), attrBehavior(map(chain => ({ href: EXPLORER_URL[chain] + 'tx/' + txHash }), network)))(\n          $text(shortenTxAddress(txHash))\n        )\n      ),\n\n      $Button({ $content: $text('Close') })({\n        click: sampleTether()\n      })\n\n    ),\n    { close }\n  ]\n})","import { $text, component, style, Behavior, $Node, $node, attr } from \"@aelea/core\"\nimport { $Button, $column, $row, layoutSheet } from \"@aelea/ui-components\"\nimport { pallete } from \"@aelea/ui-components-theme\"\nimport { combine, map, merge, switchLatest } from \"@most/core\"\nimport { network, account, requestAccounts } from \"../api/account\"\nimport { awaitProvider, CHAIN, noProviderAlert } from \"../api/provider\"\nimport { $wrapNativeElement } from \"@aelea/core\"\n// @ts-ignore\nimport jazzicon from 'jazzicon'\nimport { $alert, $anchor } from \"../../../../elements/$common\"\n\n\nexport function $jazzicon(addres: string) {\n  const cnt = parseInt(addres.slice(2, 10), 16)\n  const el = jazzicon(24, cnt)\n  return $wrapNativeElement(el)()\n}\n\n\n\nconst $userConnectionStatus = (address: string) => {\n  return $row(style({ backgroundColor: pallete.background, borderRadius: '12px', alignItems: 'center', overflow: 'hidden' }))(\n    $row(style({ borderRadius: '12px', alignItems: 'center', padding: '0 10px' }))(\n      $text(address.slice(0, 6) + '...' + address.slice(-4))\n    ),\n    $row(style({ backgroundColor: pallete.middleground, height: '40px', alignItems: 'center', padding: '0 6px' }))(\n      $jazzicon(address)\n    )\n  )\n}\n\n\nconst $accountAlert = (title: string, $description: $Node) => {\n  return $alert(layoutSheet.column, layoutSheet.spacingTiny)(\n    $text(style({ fontWeight: 'bold' }))(title),\n    $column(style({ color: pallete.foreground, marginBottom: '6px' }))(\n      $description\n    )\n  )\n}\n\n\nconst $installMetamaskWarning = $accountAlert(\n  'Metamask is missing',\n  $node(\n    $text('This demo uses metamask in order to connect with a crypto wallet. you can get it from '),\n    $anchor(attr({ href: 'https://metamask.io/' }))(\n      $text('https://metamask.io/')\n    )\n  )\n)\n\n\nexport const $AccountConnectivity = () => component((\n  [requestWallet, requestWalletTeter]: Behavior<any, any>\n) => {\n\n  const $connectButton = $Button({ $content: $text('Connect Wallet') })({\n    click: requestWalletTeter(\n      map(() => {\n        return requestAccounts\n      }),\n      switchLatest\n    ) \n  })\n\n\n  const errorOrProvider = merge(noProviderAlert, awaitProvider)\n\n  return [\n    switchLatest(\n      map(provider => {\n\n        if (provider instanceof Error)\n          return $installMetamaskWarning\n\n        return switchLatest(\n          combine((chain, account) => {\n            if (account === undefined)\n              return $connectButton\n\n\n            if (chain !== CHAIN.ETH)\n              return $accountAlert('Switch to Ethereum main network ', $text('Sending mainnet(ETH, BNB) tokens should be, other tokens are incompatible'))\n\n            return $row(layoutSheet.spacing, style({ alignItems: 'center' }))(\n              $text(style({ color: pallete.foreground }))('Account: '),\n              $userConnectionStatus(account)\n            )\n          }, network, account)\n        )\n\n\n      }, errorOrProvider)\n    ),\n    {\n      account: requestWallet\n    }\n  ]\n})\n\n\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Interface } from \"@ethersproject/abi\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { EthExrd, EthExrdInterface } from \"../EthExrd\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"depositAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"MinterAdded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"MinterRemoved\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerAdded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerRemoved\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"addMinter\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"addOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burnFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"isMinter\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"isOwner\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mintersArray\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"mintersCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownersArray\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"ownersCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"removeMinter\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceMinter\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class EthExrd__factory {\n  static readonly abi = _abi;\n  static createInterface(): EthExrdInterface {\n    return new Interface(_abi) as EthExrdInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): EthExrd {\n    return new Contract(address, _abi, signerOrProvider) as EthExrd;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Interface } from \"@ethersproject/abi\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { EthSushi, EthSushiInterface } from \"../EthSushi\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"fromDelegate\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"toDelegate\",\n        type: \"address\",\n      },\n    ],\n    name: \"DelegateChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegate\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"previousBalance\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newBalance\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DelegateVotesChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DELEGATION_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DOMAIN_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"checkpoints\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"fromBlock\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"votes\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n    ],\n    name: \"delegate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiry\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"delegateBySig\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegator\",\n        type: \"address\",\n      },\n    ],\n    name: \"delegates\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"getCurrentVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPriorVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"numCheckpoints\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class EthSushi__factory {\n  static readonly abi = _abi;\n  static createInterface(): EthSushiInterface {\n    return new Interface(_abi) as EthSushiInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): EthSushi {\n    return new Contract(address, _abi, signerOrProvider) as EthSushi;\n  }\n}\n","\nexport enum SYMBOL {\n  EXRD = 'EXRD',\n  SUSHI = 'SUSHI',\n  USDC = 'USDC',\n  USDT = 'USDT',\n  ETH = 'ETH'\n}\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\"\n\nexport const TOKENS_BSC = [\n  {\n    name: \"Bitcoin\",\n    symbol: 'BTC',\n    decimals: 18,\n    address: \"0xd19A92C0f37880CD3D19CBC8Bb2636E7051f7d89\",\n  },\n  {\n    name: \"Ethereum\",\n    symbol: 'ETH',\n    decimals: 18,\n    address: \"0x6E9eef21FE69894f088bf6d27Dc36aa74898BA8c\",\n  },\n  {\n    name: \"Binance Coin\",\n    symbol: 'BNB',\n    decimals: 18,\n    address: AddressZero,\n  },\n  {\n    name: \"USD Gambit\",\n    symbol: 'USDG',\n    decimals: 18,\n    address: '0xE14F46Ee1e23B68003bCED6D85465455a309dffF'\n  },\n  {\n    name: \"USD Binance\",\n    symbol: 'BUSD',\n    decimals: 18,\n    address: \"0xae7486c680720159130b71e0f9EF7AFd8f413227\"\n  },\n  {\n    name: \"Test Token\",\n    symbol: 'TST',\n    decimals: 8,\n    address: \"0x341F41c455fB3E08A1078D1a9c4dAd778c41E7C4\",\n  }\n]\n\n","import { CHAIN } from \"../provider\"\nimport { SYMBOL } from \"./symbol\"\n\nexport const ETH_CONTRACT = {\n  [CHAIN.ETH]: {\n    [SYMBOL.EXRD]: \"0x6468e79a80c0eab0f9a2b574c8d5bc374af59414\",\n    [SYMBOL.SUSHI]: \"0x6b3595068778dd592e39a122f4f5a5cf09c90fe2\",\n    [SYMBOL.USDC]: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n    [SYMBOL.USDT]: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n  }\n}\n\n\n","import { awaitPromises, combine, map, skipRepeatsWith, switchLatest } from \"@most/core\"\nimport { account } from \"./account\"\nimport { awaitProvider, CHAIN, metamaskEvent, providerAction } from \"./provider\"\nimport { Provider } from \"@ethersproject/providers\"\nimport { Address } from \"./types\"\nimport { fromCallback } from \"@aelea/core\"\nimport { state } from \"@aelea/ui-components\"\nimport { Stream } from \"@most/types\"\nimport { EthExrd__factory, EthSushi__factory } from \"./ethers-contracts\"\nimport { SYMBOL } from \"./address/symbol\"\nimport { bnToHex, formatFixed } from \"./utils\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { Contract, ContractTransaction } from \"@ethersproject/contracts\"\nimport { Signer } from \"@ethersproject/abstract-signer\"\nimport { AddressZero } from \"./address/token\"\nimport { ETH_CONTRACT } from \"./address/contract\"\n\nconst UPDATE_CONTRACT_INTERVAL = 1350\n\nconst formatBN = map((bnb: BigNumber) => formatFixed(bnb.toBigInt()))\nconst skipRepeatedBns = skipRepeatsWith((bn1: BigNumber, bn2: BigNumber) => bn1.eq(bn2))\nexport const mainchainBalance = providerAction(UPDATE_CONTRACT_INTERVAL, combine(async (accountHash, provider) => provider.w3p.getBalance(accountHash), account))\nexport const mainchainBalanceReadable = formatBN(mainchainBalance)\n\nexport interface IContractBase<T extends Contract> {\n  address: string\n\n  balance: Stream<BigNumber>\n  balanceReadable: Stream<string>\n\n  contract: Stream<T>\n  listen: <A extends any[]>(eventName: string) => Stream<A>\n}\n\nexport interface IContract<T extends Contract> extends IContractBase<T> {\n  transfer(to: string, amount: bigint): Stream<ContractTransaction | string>\n}\n\n\n\ntype ConnectFactoryFn<T extends Contract> = (address: Address, signerOrProvider: Signer | Provider) => T\n\nfunction baseActions<T extends Contract>(address: Address, contractFactory: ConnectFactoryFn<T>): IContractBase<T> {\n\n  const contract = map(provider => {\n\n    const signer = provider.w3p.getSigner()\n\n    return contractFactory(address, signer)\n  }, awaitProvider)\n\n  const listen = (eventName: string) => switchLatest(\n    map(({ contract }) => {\n      return fromCallback(cb => {\n        contract.on(eventName, cb)\n\n        return () => contract.off(eventName, cb)\n      })\n    }, accountAndContract)\n  )\n\n  const accountAndContract = state.combineState({ contract, account })\n\n  const balanceSource = combine(async ({ contract, account }) => {\n    return contract.balanceOf(account)\n  }, accountAndContract)\n\n  const balance = skipRepeatedBns(providerAction(UPDATE_CONTRACT_INTERVAL, balanceSource))\n  const balanceReadable = formatBN(balance)\n\n  return { balance, balanceReadable, contract, address, listen }\n}\n\n\nexport const ethContracts = {\n  MAINCHAIN: {\n    address: AddressZero,\n    balance: skipRepeatedBns(mainchainBalance),\n    balanceReadable: mainchainBalanceReadable,\n    contract: null as any, // look into a way to make a compatible interface with mainnet\n    listen: metamaskEvent,\n    transfer(to: string, amount: bigint) {\n      const accountAndContract = state.combineState({ provider: awaitProvider, account })\n      const request = map(async (w3): Promise<string> => {\n        // txHash is a hex string\n        // As with any RPC call, it may throw an error\n        // w3.provider.w3p.sendTransaction\n        const txHash = await w3.provider.metamask.request({\n          method: 'eth_sendTransaction',\n          params: [\n            { from: w3.account, to, value: bnToHex(amount) },\n          ],\n        })\n        return txHash\n      }, accountAndContract)\n\n      const transferSignal = awaitPromises(request)\n      return transferSignal\n    }\n  },\n  [SYMBOL.EXRD]: {\n    ...baseActions(ETH_CONTRACT[CHAIN.ETH].EXRD, EthExrd__factory.connect),\n    address: ETH_CONTRACT[CHAIN.ETH].EXRD,\n    transfer(to: string, amount: bigint) {\n      const transferSignal = awaitPromises(map(cont => cont.transfer(to, BigNumber.from(amount)), this.contract))\n      return transferSignal\n    }\n  },\n  [SYMBOL.SUSHI]: {\n    ...baseActions(ETH_CONTRACT[CHAIN.ETH].SUSHI, EthSushi__factory.connect),\n    address: ETH_CONTRACT[CHAIN.ETH].SUSHI,\n    transfer (to: string, amount: bigint) {\n      const transferSignal = awaitPromises(map(cont => cont.transfer(to, BigNumber.from(amount)), this.contract))\n      return transferSignal\n    }\n  },\n  [SYMBOL.USDT]: {\n    ...baseActions(ETH_CONTRACT[CHAIN.ETH].USDT, EthSushi__factory.connect),\n    address: ETH_CONTRACT[CHAIN.ETH].USDT,\n    transfer (to: string, amount: bigint) {\n      const transferSignal = awaitPromises(map(cont => cont.transfer(to, BigNumber.from(amount)), this.contract))\n      return transferSignal\n    }\n  },\n} as const\n\n\n\n\n","import { ethContracts } from \"./api/contract\"\nimport { $eth, $usdt, $xrd, $sushi } from \"./$elements\"\nimport { SYMBOL } from \"./api/address/symbol\"\nimport { Token } from \"./types\"\nimport { Contract } from \"@ethersproject/contracts\"\n\n\nexport const tokenList: Token<Contract>[]= [\n  { $icon: $eth, contract: ethContracts.MAINCHAIN, label: 'Ethereum', symbol: SYMBOL.ETH },\n  { $icon: $usdt, contract: ethContracts.USDT, label: 'Tether', symbol: SYMBOL.USDT },\n  { $icon: $sushi, contract: ethContracts.SUSHI, label: 'Sushi', symbol: SYMBOL.SUSHI },\n  { $icon: $xrd, contract: ethContracts.EXRD, label: 'e-Radix', symbol: SYMBOL.EXRD },\n]","import { $text, Behavior, component, event, INode, O, style } from \"@aelea/core\"\nimport { $VirtualScroll, layoutSheet, ScrollResponse, $column, $TextField, ScrollRequest } from \"@aelea/ui-components\"\nimport { constant, empty, map, multicast, startWith, switchLatest } from \"@most/core\"\nimport { $tokenLabel } from \"../$elements\"\nimport { Token } from \"../types\"\n\nfunction objectValuesContainsText<T>(obj: T, text: string) {\n  const match = Object.values(obj).find(value => {\n    return typeof value === 'string' && value.toLocaleLowerCase().indexOf(text.toLocaleLowerCase()) !== -1\n  })\n\n  return match !== undefined\n}\n\nexport const $TokenList = <T extends Readonly<Token>>(list: readonly T[]) => component((\n  [choose, chooseTether]: Behavior<INode, T>,\n  [scrollRequest, scrollRequestTether]: Behavior<ScrollRequest, ScrollRequest>,\n  [filterListInput, filterListInputTether]: Behavior<string, string>,\n\n) => {\n\n  const filterWithInitial = startWith('', filterListInput)\n\n  return [\n    $column(layoutSheet.spacingBig)(\n      $TextField({ label: 'Filter', value: empty() })({\n        change: filterListInputTether()\n      }),\n\n      switchLatest(\n        map(filter =>\n          $VirtualScroll({\n            containerOps: O(layoutSheet.spacing, style({ width: '300px' })),\n            dataSource: map((): ScrollResponse => {\n              const $items = list.filter(obj => objectValuesContainsText(obj, filter)).map(token => {\n                const changeTokenBehavior = chooseTether(event('click'), constant(token))\n\n                return changeTokenBehavior($tokenLabel(token, $text(token.contract.balanceReadable)))\n              })\n\n              return { $items, pageSize: 20 }\n            }, multicast(scrollRequest))\n          })({\n            scrollRequest: scrollRequestTether()\n          })\n        , filterWithInitial)\n      )\n      \n    ),\n\n    { choose }\n  ]\n})","import { attrBehavior, Behavior, component, event, INode, O, style } from \"@aelea/core\"\nimport { $row, layoutSheet, $icon, $Popover, $Field, $column } from \"@aelea/ui-components\"\nimport { constant, map, merge, multicast, switchLatest } from \"@most/core\"\nimport { Stream } from \"@most/types\"\nimport { Token } from \"../types\"\nimport { tokenList } from '../state'\nimport { $caretDown } from \"../$elements\"\nimport { $TokenList } from \"./$tokenList\"\n\n\n\ninterface CoinInput {\n  token: Stream<Token>\n  changeInput: Stream<string>\n  // field: Field\n}\n\n\nexport const $TokenInput = ({ token, changeInput }: CoinInput) => component((\n  [change, changeTether]: Behavior<string, string>,\n  [switchTokenPopover, switchTokenPopoverTether]: Behavior<INode, PointerEvent>,\n  [switchToken, switchTokenTether]: Behavior<Token, Token>,\n) => {\n\n  const $tokenList = $TokenList(tokenList)({\n    choose: switchTokenTether(multicast)\n  })\n\n  const value = merge(constant('', token), changeInput)\n\n  const selectedBalance = switchLatest(\n    map(token => {\n      return token.contract.balanceReadable\n    }, token)\n  )\n\n  return [\n    $row(layoutSheet.spacing, style({ alignItems: 'center', flex: 1 }))(\n    \n      $Popover({\n        $$popContent: constant($tokenList, switchTokenPopover),\n        dismiss: switchToken\n        // overlayBackgroundColor: pallete.background\n      })(\n        $row(switchTokenPopoverTether(event('click')), layoutSheet.spacingSmall, style({ alignItems: 'center', cursor: 'pointer' }))(\n          switchLatest(map(t => style({ width: '48px', height: '48x' }, t.$icon), token)),\n          $icon({ $content: $caretDown, width: '10px', viewBox: '0 0 32 19.43' })\n        )\n      )({}),\n\n      $column(\n        $Field({\n          value,\n          fieldStyle: { borderBottomColor: 'transparent', fontWeight: 'bolder', fontSize: '1.55em' },\n          inputOp: O(\n            attrBehavior(\n              map(placeholder => {\n                return { placeholder }\n              }, selectedBalance)\n            )\n          )\n        })({\n          change: changeTether()\n        }),\n      )\n    ),\n\n    { change, switchToken }\n  ]\n})","\nimport { $text, attr, Behavior, component, event, IBranch, O, style } from '@aelea/core'\nimport { state, $column, $Slider, layoutSheet, $Popover, $row, $Field, $Button } from '@aelea/ui-components'\nimport { switchLatest, merge, constant, snapshot, map, sample, awaitPromises, startWith, filter, mergeArray, multicast } from '@most/core'\nimport { $TokenInput } from './$TokenInput'\nimport { account } from '../api/account'\nimport { ITransaction } from '../api/types'\nimport { $gaugeMetric, $labeledDivider } from '../$elements'\nimport { tokenList } from '../state'\nimport { Token } from '../types'\nimport { formatFixed, isAddress, parseFixed } from '../api/utils'\nimport { Contract } from '@ethersproject/contracts'\n\nexport const $CreateTransaction = component((\n  [inputValueChange,     inputValueChangeTether]: Behavior<string, string>,\n  [clickOnDivide,        clickOnDivideTether]: Behavior<IBranch, PointerEvent>,\n  [divideBySlider,       divideBySliderTether]: Behavior<number, number>,\n  [switchTokenSource,    switchTokenSourceTether]: Behavior<Token<Contract>, Token<Contract>>,\n  [destination,          destinationTether]: Behavior<string, string>,\n  [send,                 sendTether]: Behavior<PointerEvent, ITransaction>,\n  [clipboardInput,       clipboardInputTether]: Behavior<IBranch, string>,\n) => {\n\n  const initialTokenValue = tokenList[0]\n  const token = state.replayLatest(switchTokenSource, initialTokenValue)\n  const balance = switchLatest(map(t => t.contract.balance, token))\n\n  const divideBalanceReadableBySlider = snapshot((balance, divide) => {\n    const balanceBN = balance.toBigInt()\n    const divWithBigInt = balanceBN / 100n * (BigInt(Math.round(divide * 100)))\n\n    return { valueReadable: formatFixed(divWithBigInt), value: divWithBigInt }\n  }, balance, divideBySlider)\n\n  const divideByInput = snapshot((balance, inputValue) => {\n    return Number(formatFixed(parseFixed(inputValue))) / Number(formatFixed(balance.toBigInt()))\n  }, balance, inputValueChange)\n\n  const transaction = multicast(\n    state.combineState<ITransaction>({\n      token,\n      from: account,\n      to: merge(clipboardInput, destination),\n      value: mergeArray([\n        map(x => x.value, divideBalanceReadableBySlider),\n        map(parseFixed, inputValueChange)\n      ])\n    })\n  )\n\n  const sendTransaction = sample(transaction, send)\n\n  const sliceAmount = state.replayLatest(mergeArray([divideByInput, divideBySlider]), 0)\n\n\n  const $allocateDivisionPopover = $column(style({ padding: '0 0 10px' }))(\n    $Slider({ value: sliceAmount  })({\n      change: divideBySliderTether()\n    })\n  )\n\n  return [\n\n    $column(layoutSheet.spacingBig)(\n      $Popover({\n        $$popContent: constant($allocateDivisionPopover, clickOnDivide),\n        padding: 50\n      })(\n        $row(layoutSheet.spacing, style({ alignItems: 'center' }))(\n          $TokenInput({ token: token, changeInput: map(x => x.valueReadable, divideBalanceReadableBySlider) })({\n            change: inputValueChangeTether(),\n            switchToken: switchTokenSourceTether()\n          }),\n          clickOnDivideTether(event('click'))(\n            $gaugeMetric({ value: sliceAmount, size: '36px', styleCSS: { height: '100%', cursor: 'pointer' } })\n          )\n        )\n      )({}),\n\n      style({ margin: '0 -30px' })(\n        $labeledDivider('Send To'),\n      ),\n\n      $Field({\n        value: startWith('', clipboardInput),\n        fieldStyle: { borderBottomColor: 'transparent', fontWeight: 'bolder', fontSize: '88%' },\n        inputOp: O(\n          clipboardInputTether(\n            event('focus'),\n            map(async focusEvent => navigator.clipboard.readText().catch(() => '')),\n            awaitPromises,\n            filter(clipBoard => isAddress(clipBoard)),\n          ),\n          attr({ placeholder: 'Place Address' }),\n          style({ textAlign: 'center' })\n        )\n      })({\n        change: destinationTether()\n      }),\n\n      $row(style({ placeContent: 'center' }))(\n        $Button({\n          $content: $text('Send'),\n          disabled: startWith(true, map(s => {\n            return isAddress(s.to) === false || s.value <= 0n\n          }, transaction))\n        })({\n          click: sendTether()\n        })\n      )\n    ),\n\n    {\n      send: sendTransaction\n    }\n  ]\n})\n ","import { filter, map, merge, now, switchLatest, tap } from \"@most/core\";\nimport { $element, attr, component, event, style, stylePseudo, O } from '@aelea/core';\nimport { pallete } from \"@aelea/ui-components-theme\";\nexport const $Slider = ({ value, step = .01 }) => component(([change, changeTether]) => {\n    const sliderThunmbStyle = {\n        backgroundColor: pallete.primary,\n        borderRadius: '50%',\n        width: '25px',\n        height: '25px',\n        appearance: 'none',\n        cursor: 'grab'\n    };\n    return [\n        $element('input')(style({ width: '100%', height: '3px', margin: '0', transition: 'opacity .2s', appearance: 'none', outline: 'none', background: pallete.message }), stylePseudo('::-webkit-slider-thumb', sliderThunmbStyle), \n        // stylePseudo('::-moz-range-thumb', sliderThunmbStyle),\n        changeTether(event('input'), map(evt => {\n            const target = evt.target;\n            return Number(target.value);\n        })), attr({ type: 'range', min: 0, max: 1, step }), O(map(node => merge(now(node), filter(() => false, tap(val => {\n            // applying by setting `HTMLInputElement.value` imperatively(only way known to me)\n            node.element.value = String(val);\n        }, value)))), switchLatest))(),\n        { change }\n    ];\n});\n//# sourceMappingURL=$Slider.js.map","\nimport { Behavior, component, style } from '@aelea/core'\nimport { $card, $column, elevation2, layoutSheet } from '@aelea/ui-components'\nimport { map, merge, mergeArray, now, switchLatest } from '@most/core'\nimport { fadeIn } from '../../../components/transitions/enter'\nimport { $Confirmation } from './components/$Confirmation'\nimport { $Transaction } from './components/$Transaction'\nimport { ITransaction } from './api/types'\nimport { $AccountConnectivity } from './components/$ConnectAccount'\nimport { $CreateTransaction } from './components/$CreateTransaction'\nimport { ContractTransaction } from '@ethersproject/contracts'\n\n\nexport interface ExchangeUnit {\n  symbol: string\n  exchangeScale: number\n\n  /** Orders of magnitude between the unit of account and the base unit */\n  accountScale: number\n  /**\n   * Number of orders of magnitude between this unit and the base unit\n   * - Defines the unit of the asset (e.g. ether, gwei, or wei, in the case of the asset ETH)\n   * - By default, this should be 0, the base unit (typically the smallest denomination of the asset)\n   */\n  decimals: number\n}\n\n\n\nexport const $EtherSwapExample = component((\n  [send, sendTether]: Behavior<ITransaction, ITransaction>,\n  [backToMainClick, backToMainClickClick]: Behavior<PointerEvent, PointerEvent>,\n  [txHash, sampleTxHash]: Behavior<ContractTransaction | string, ContractTransaction | string>,\n  [account, accountTether]: Behavior<string, string>,\n) => {\n\n  const initialSwapCard = merge(now(null), backToMainClick)\n\n  return [\n    $column(layoutSheet.spacingBig, style({ placeContent: 'center', alignItems: 'center' }))(\n      $AccountConnectivity()({\n        account: accountTether()\n      }),\n      \n      $card(elevation2, style({ borderRadius: '30px', padding: '30px', width: '470px' }))(\n        switchLatest(\n          mergeArray([\n            map(() => $CreateTransaction({\n              send: sendTether()\n            }), initialSwapCard),\n            map(transaction =>\n              fadeIn(\n                $Confirmation({ transaction })({\n                  confirm: sampleTxHash(),\n                  back: backToMainClickClick()\n                })\n              )\n            , send),\n            map(tx =>\n              fadeIn(\n                $Transaction(typeof tx === 'string' ? tx : tx.hash )({\n                  close: backToMainClickClick(),\n                })\n              ),\n            txHash\n            )\n          ])\n        )\n      ),\n\n    ),\n    \n  ]\n})\n\n\n","import { event, $text, Behavior, component, INode, style } from \"@aelea/core\"\nimport { $Button, $column, $row, layoutSheet } from \"@aelea/ui-components\"\nimport { ContractTransaction } from \"@ethersproject/contracts\"\nimport { awaitPromises, snapshot, switchLatest } from \"@most/core\"\nimport { $labeledDivider, $tokenLabel } from \"../$elements\"\nimport { $anchor } from \"../../../../elements/$common\"\nimport { awaitProvider } from \"../api/provider\"\nimport { ITransaction } from \"../api/types\"\nimport { formatFixed } from \"../api/utils\"\n\nexport interface IConfirmation {\n  transaction: ITransaction\n}\n\n\nexport const $Confirmation = (swapState: IConfirmation) => component((\n  [confirm, confirmTether]: Behavior<any, ContractTransaction | string>,\n  [back,    backTether]: Behavior<INode, PointerEvent>,\n) => {\n\n  return [\n    $column(layoutSheet.spacingBig)(\n      $text(style({ textAlign: 'center', fontSize: '25px' }))(\n        'Review Transaction'\n      ),\n\n      $column(layoutSheet.spacingSmall, style({ alignItems: 'center' }))(\n        $tokenLabel(swapState.transaction.token),\n        // $icon({ $content: swapState.transaction.token.$icon, fill: pallete.message, width: '42px', viewBox: '0 0 32 32' }),\n        $text(style({ fontWeight: 'bold' }))(\n          formatFixed(swapState.transaction.value)\n        )\n      ),\n\n      style({ margin: '0 -30px' })(\n        $labeledDivider('Send To')\n      ),\n\n      $text(style({ fontSize: '75%', textAlign: 'center' }))(swapState.transaction.to),\n\n      $row(layoutSheet.spacing, style({ placeContent: 'center', alignItems: 'center', paddingTop: '25px' }))(\n        $anchor(backTether(event('click')))(\n          $text('Back')\n        ),\n        $Button({ $content: $text('Send') })({\n          click: confirmTether(\n            snapshot(async (provider) => {\n              const newLocal = swapState.transaction.token.contract.transfer(swapState.transaction.to, swapState.transaction.value)\n              return newLocal\n            }, awaitProvider),\n            awaitPromises,\n            switchLatest,\n          )\n        })\n      )\n\n    ),\n    { confirm, back }\n  ]\n})\n","import { map } from \"@most/core\"\nimport { providerAction } from \"./provider\"\n\nexport const getTxDetails = (txHash: string) => providerAction(350, map(w3 => w3.w3p.getTransactionReceipt(txHash)))\n\n"],"sourceRoot":""}